class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        //first occurence
        int start = 0;
        int end = nums.size() - 1;

        int mid = start + (end - start) / 2;
        int ans1 = -1, ans2 = -1;

        while( start <= end){
            if(nums[mid] == target){
                ans1 = mid;
                end = mid - 1;
            }
            else if(target < nums[mid]){
                end = mid - 1;
            }
            else if(target > nums[mid]){
                start = mid + 1;
            }
            mid = start + (end - start) / 2;
        }

        //last occurence
        start = 0;
        end = nums.size() - 1;
        mid = start + (end - start) / 2;

        while( start <= end){
            if(nums[mid] == target){
                ans2 = mid;
                start = mid + 1;
            }
            else if(target < nums[mid]){
                end = mid - 1;
            }
            else if(target > nums[mid]){
                start = mid + 1;
            }
            mid = start + (end - start) / 2;
        }
        return {ans1, ans2};
    }
};
